#!/bin/bash


# This script loads a pd patch (argument 1) and puts all dependencies in the 
# directory specified with argument 2
#


#get pdfile name from argument 1
if [ "$1" ]
then
	PDFILE="$1"
else
	echo "Please provide a pd patch in argument 1"
	exit 1
fi

#get libdir name from argument 2
if [ "$2" ]
then
	LIBDIR="$2"
else
	echo "Please provide a library directory name in argument 2"
	exit 1
fi

#make the lib directory
mkdir $LIBDIR

#get logfile name from pd file
LOGFILE=$(basename $PDFILE .pd)-log

#load pd file and output console printout to logfile
echo "
Ctrl+C after a patch has fully loaded to continue
"
pd -stderr -verbose -open $PDFILE -nogui  2> $LOGFILE 

#create a file for the sorted log
SORTED="$LOGFILE-sorted"

#find all succeeded tries and sort them
grep -e "succeeded" "$LOGFILE" | sort -u > "$SORTED"

#remove unwanted strings to keep only paths/to/files
sed -i -e 's/tried //g' "$SORTED"
sed -i -e 's/and succeeded//g' "$SORTED"

#remove unwanted files
if [ -e "$SORTED-e" ]
then
  rm "$SORTED-e"
fi

#read the sorted text and copy files into the lib directory
while read line
do
  cp -r "$line" "$LIBDIR/"
done < "$SORTED"

#remove the log files
rm "$SORTED"
rm "$LOGFILE"

#remove the duplicated patch file that is created in libdir
rm "$LIBDIR/$PDFILE"

exit 0
